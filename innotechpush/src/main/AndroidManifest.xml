<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.innotech.innotechpush">

    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.GET_TASKS" />
    <uses-permission android:name="android.permission.BROADCAST_PACKAGE_ADDED" />
    <uses-permission android:name="android.permission.BROADCAST_PACKAGE_CHANGED" />
    <uses-permission android:name="android.permission.BROADCAST_PACKAGE_INSTALL" />
    <uses-permission android:name="android.permission.BROADCAST_PACKAGE_REPLACED" />
    <uses-permission android:name="android.permission.RESTART_PACKAGES" />
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />

    <permission android:name="android.permission.READ_PRIVILEGED_PHONE_STATE" />
    <uses-permission android:name="android.permission.VIBRATE" />

    <!-- 小米权限 -->
    <permission
        android:name="${applicationId}.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature" />

    <uses-permission android:name="${applicationId}.permission.MIPUSH_RECEIVE" />
    <!-- 小米权限 -->

    <!-- 魅族权限 -->
    <!-- 兼容 flyme5.0 以下版本，魅族内部集成 pushSDK 必填，不然无法收到消息-->
    <uses-permission android:name="com.meizu.flyme.push.permission.RECEIVE" />
    <permission
        android:name="${applicationId}.push.permission.MESSAGE"
        android:protectionLevel="signature" />
    <uses-permission android:name="${applicationId}.push.permission.MESSAGE" />

    <!-- 兼容 flyme3.0 配置权限-->
    <uses-permission android:name="com.meizu.c2dm.permission.RECEIVE" />
    <permission
        android:name="${applicationId}.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />
    <uses-permission android:name="${applicationId}.permission.C2D_MESSAGE" />
    <!-- 魅族权限 -->
    <!--huawei begin-->
    <!--如果是安卓8.0，应用编译配置的targetSdkVersion>=26，请务必添加以下权限 -->
    <uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES" />
    <!--huawei end-->
    <!-- 个推SDK权限配置开始 -->
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <!-- ⽀支持iBeancon 需要蓝⽛牙权限 -->
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
    <!-- ⽀支持个推3.0 电⼦子围栏功能 -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <!-- 浮动通知权限 -->
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
    <!-- ⾃自定义权限 -->
    <uses-permission android:name="getui.permission.GetuiService.${applicationId}" />
    <permission
        android:name="getui.permission.GetuiService.${applicationId}"
        android:protectionLevel="normal" />
    <!-- 个推SDK权限配置结束 -->

    <!-- oppo权限配置开始 -->
    <!--<uses-permission android:name="com.coloros.mcs.permission.RECIEVE_MCS_MESSAGE" />-->
    <!-- oppo权限配置结束 -->

    <application android:usesCleartextTraffic="true">
        <!-- 推送module是否调试模式 -->
        <meta-data
            android:name="INNOTECH_PUSH_DEBUG"
            android:value="${INNOTECH_PUSH_DEBUG}" />
        <meta-data
            android:name="INNOTECH_APP_ID"
            android:value="${INNOTECH_APP_ID}" />
        <meta-data
            android:name="INNOTECH_APP_KEY"
            android:value="${INNOTECH_APP_KEY}" />

        <!-- oppo push begin -->
        <!--<meta-data-->
            <!--android:name="OPPO_APP_KEY"-->
            <!--android:value="${OPPO_APP_KEY}" />-->
        <!--<meta-data-->
            <!--android:name="OPPO_APP_SECRET"-->
            <!--android:value="${OPPO_APP_SECRET}" />-->
        <!--<service-->
            <!--android:name=".service.OppoPushService"-->
            <!--android:permission="com.coloros.mcs.permission.SEND_MCS_MESSAGE">-->
            <!--<intent-filter>-->
                <!--<action android:name="com.coloros.mcs.action.RECEIVE_MCS_MESSAGE" />-->
            <!--</intent-filter>-->
        <!--</service>-->
        <!-- oppo push end -->

        <!--xiaomi push begin -->
        <meta-data
            android:name="MI_APP_ID"
            android:value="innotech-${MI_APP_ID}" />
        <meta-data
            android:name="MI_APP_KEY"
            android:value="innotech-${MI_APP_KEY}" />

        <service
            android:name="com.xiaomi.push.service.XMJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":pushservice" />

        <service
            android:name="com.xiaomi.push.service.XMPushService"
            android:enabled="true"
            android:process=":pushservice" />

        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true" />

        <receiver
            android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.xiaomi.push.service.receivers.PingReceiver"
            android:exported="false"
            android:process=":pushservice">
            <intent-filter>
                <action android:name="com.xiaomi.push.PING_TIMER" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.innotech.innotechpush.receiver.MiMessagePushReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.ERROR" />
            </intent-filter>
        </receiver>
        <!--xiaomi push end -->

        <!-- meizu push begin -->
        <meta-data
            android:name="MEIZU_APP_ID"
            android:value="innotech-${MEIZU_APP_ID}" />
        <meta-data
            android:name="MEIZU_APP_KEY"
            android:value="${MEIZU_APP_KEY}" />
        <!-- push 应用定义消息 receiver 声明 -->
        <receiver android:name=".receiver.MeizuPushMsgReceiver">
            <intent-filter>
                <!-- 接收 push 消息 -->
                <action android:name="com.meizu.flyme.push.intent.MESSAGE" />
                <!-- 接收 register 消息 -->
                <action android:name="com.meizu.flyme.push.intent.REGISTER.FEEDBACK" />
                <!-- 接收 unregister 消息-->
                <action android:name="com.meizu.flyme.push.intent.UNREGISTER.FEEDBACK" />
                <!-- 兼容低版本 Flyme3 推送服务配置 -->
                <action android:name="com.meizu.c2dm.intent.REGISTRATION" />
                <action android:name="com.meizu.c2dm.intent.RECEIVE" />

                <category android:name="${applicationId}" />
            </intent-filter>
        </receiver>
        <!-- meizu push end -->
        <!--huawei begin-->

        <!-- value的值“xxx”用实际申请的应用ID替换，来源于开发者联盟网站应用的服务详情。-->
        <!--<meta-data-->
        <!--android:name="com.huawei.hms.client.appid"-->
        <!--android:value="appid=${HMS_APP_ID}">-->

        <!--</meta-data>-->
        <!--<activity-->
        <!--android:name="com.huawei.hms.activity.BridgeActivity"-->
        <!--android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"-->
        <!--android:excludeFromRecents="true"-->
        <!--android:exported="false"-->
        <!--android:hardwareAccelerated="true"-->
        <!--android:theme="@android:style/Theme.Translucent">-->
        <!--<meta-data-->
        <!--android:name="hwc-theme"-->
        <!--android:value="androidhwext:style/Theme.Emui.Translucent" />-->
        <!--</activity>-->
        <!--<activity-->
        <!--android:name="com.huawei.updatesdk.service.otaupdate.AppUpdateActivity"-->
        <!--android:configChanges="orientation|screenSize"-->
        <!--android:exported="false"-->
        <!--android:theme="@style/upsdkDlDialog">-->

        <!--<meta-data-->
        <!--android:name="hwc-theme"-->
        <!--android:value="androidhwext:style/Theme.Emui.Translucent.NoTitleBar" />-->
        <!--</activity>-->

        <!--<activity-->
        <!--android:name="com.huawei.updatesdk.support.pm.PackageInstallerActivity"-->
        <!--android:configChanges="orientation|keyboardHidden|screenSize"-->
        <!--android:exported="false"-->
        <!--android:theme="@style/upsdkDlDialog">-->
        <!--<meta-data-->
        <!--android:name="hwc-theme"-->
        <!--android:value="androidhwext:style/Theme.Emui.Translucent" />-->
        <!--</activity>-->

        <!--<provider-->
        <!--android:name="com.huawei.hms.update.provider.UpdateProvider"-->
        <!--android:authorities="${applicationId}.hms.update.provider"-->
        <!--android:exported="false"-->
        <!--android:grantUriPermissions="true" />-->
        <!--<provider-->
        <!--android:name="com.huawei.updatesdk.fileprovider.UpdateSdkFileProvider"-->
        <!--android:authorities="${applicationId}.updateSdk.fileProvider"-->
        <!--android:exported="false"-->
        <!--android:grantUriPermissions="true" />-->

        <!--<service-->
        <!--android:name="com.huawei.updatesdk.service.deamon.download.DownloadService"-->
        <!--android:exported="false" />-->
        <!--&lt;!&ndash; xxx.xx.xx为CP自定义的广播名称，比如: com.huawei.hmssample. HuaweiPushRevicer &ndash;&gt;-->
        <!--<receiver android:name="com.innotech.innotechpush.receiver.HuaweiPushRevicer">-->
        <!--<intent-filter>-->
        <!--&lt;!&ndash; 必须,用于接收TOKEN &ndash;&gt;-->
        <!--<action android:name="com.huawei.android.push.intent.REGISTRATION" />-->
        <!--&lt;!&ndash; 必须，用于接收消息 &ndash;&gt;-->
        <!--<action android:name="com.huawei.android.push.intent.RECEIVE" />-->
        <!--&lt;!&ndash; 可选，用于点击通知栏或通知栏上的按钮后触发onEvent回 调 &ndash;&gt;-->
        <!--<action android:name="com.huawei.android.push.intent.CLICK" />-->
        <!--&lt;!&ndash; 可选，查看PUSH通道是否连接，不查看则不需要 &ndash;&gt;-->
        <!--<action android:name="com.huawei.intent.action.PUSH_STATE" />-->
        <!--</intent-filter>-->
        <!--</receiver>-->
        <!--<receiver android:name="com.huawei.hms.support.api.push.PushEventReceiver">-->
        <!--<intent-filter>-->
        <!--&lt;!&ndash; 接收通道发来的通知栏消息，兼容老版本PUSH &ndash;&gt;-->
        <!--<action android:name="com.huawei.intent.action.PUSH" />-->
        <!--</intent-filter>-->
        <!--</receiver>-->

        <!--<activity-->
        <!--android:name="com.huawei.android.hms.agent.common.HMSAgentActivity"-->
        <!--android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"-->
        <!--android:excludeFromRecents="true"-->
        <!--android:exported="false"-->
        <!--android:hardwareAccelerated="true"-->
        <!--android:theme="@android:style/Theme.Translucent">-->
        <!--<meta-data-->
        <!--android:name="hwc-theme"-->
        <!--android:value="androidhwext:style/Theme.Emui.Translucent" />-->
        <!--</activity>-->
        <!--huawei end-->
        <!-- 个推SDK配置开始 -->
        <meta-data
            android:name="PUSH_APPID"
            android:value="${GETUI_APP_ID}" />
        <meta-data
            android:name="PUSH_APPKEY"
            android:value="${GETUI_APP_KEY}" />
        <meta-data
            android:name="PUSH_APPSECRET"
            android:value="${GETUI_APP_SECRET}" />
        <!-- 配置SDK核⼼心服务 -->
        <service
            android:name="com.igexin.sdk.PushService"
            android:exported="true"
            android:label="NotificationCenter"
            android:process=":pushservice">
            <intent-filter>
                <action android:name="com.igexin.sdk.action.service.message" />
            </intent-filter>
        </service>
        <receiver android:name="com.igexin.sdk.PushReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <action android:name="android.intent.action.USER_PRESENT" />
                <action android:name="com.igexin.sdk.action.refreshls" />
                <!-- 以下三项为可选的action声明，可⼤大⼤大提⾼高service存活率和消息到达速度 -->
                <action android:name="android.intent.action.MEDIA_MOUNTED" />
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
            </intent-filter>
        </receiver>

        <activity
            android:name="com.igexin.sdk.PushActivity"
            android:excludeFromRecents="true"
            android:exported="false"
            android:process=":pushservice"
            android:taskAffinity="com.igexin.sdk.PushActivityTask"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <activity
            android:name="com.igexin.sdk.GActivity"
            android:excludeFromRecents="true"
            android:exported="true"
            android:process=":pushservice"
            android:taskAffinity="com.igexin.sdk.PushActivityTask"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <service
            android:name="com.innotech.innotechpush.service.PushService"
            android:exported="true"
            android:label="PushService"
            android:process=":pushservice" />
        <service android:name="com.innotech.innotechpush.service.PushIntentService" />
        <!-- 个推SDK配置结束 -->

        <receiver android:name=".receiver.NotificationClickReceiver" />

        <receiver android:name=".receiver.UserInfoReceiver">
            <intent-filter>
                <action android:name="com.inno.push.action.UPDATEUSERINFO" />
            </intent-filter>
        </receiver>

        <service
            android:name=".sdk.SocketClientService"
            android:persistent="true"
            android:process=":pushservice" />
        <!--android:process=":innotechpush" />-->

        <receiver
            android:name=".sdk.PushReceiver"
            android:exported="true"
            android:process=":pushservice">
            <!--android:process=":innotechpush">-->
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <action android:name="android.intent.action.USER_PRESENT" />
                <action android:name="com.innotech.sdk.action.refreshls${applicationId}" />
                <!-- 以下三项为可选的action声明，可⼤大⼤大提⾼高service存活率和消息到达速度 -->
                <action android:name="android.intent.action.MEDIA_MOUNTED" />
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
                <action android:name="com.innotech.push.RECEIVE_MESSAGE" />
                <action android:name="com.innotech.push.MESSAGE_CLICK" />
            </intent-filter>
        </receiver>

        <receiver
            android:name=".receiver.SocketClientRevicer"
            android:exported="true">
            <intent-filter>
                <action android:name="com.innotech.push.RECEIVE_MESSAGE" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.innotech.push.MESSAGE_CLICK" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.innotech.push.ERROR" />
            </intent-filter>
        </receiver>

        <service
            android:name=".sdk.KeepLiveService"
            android:process=":pushservice" />
        <activity
            android:name=".sdk.KeepLiveActivity"
            android:configChanges="keyboard|keyboardHidden|navigation|orientation|screenSize"
            android:excludeFromRecents="true"
            android:launchMode="singleInstance"
            android:process=":cdaemon"
            android:showOnLockScreen="true"
            android:taskAffinity="com.inno.keeplive"
            android:theme="@android:style/Theme.Translucent.NoTitleBar.Fullscreen" />

    </application>
</manifest>
